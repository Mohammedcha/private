{"css":{"pc":{"body":{"background":{"color":"#f9f9f9","horizontal":"left","image":"","size":"cover","vertical":"top"}},"body-human-verification":{"background":{"color":"#fbfbfb","horizontal":"left","image":"","size":"cover","vertical":"top"},"background-hover":{"color":"#b1b1b1","horizontal":"left","image":"","size":"cover","vertical":"top"},"border-radius":"4","border-color":"#b9b9b9","border-color-hover":"#b9b9b9","border-width":"0","font-color":"#9c9c9c","font-color-hover":"#565656","font-size":"14","font-weight":"normal","margin-bottom":"0","margin-top":"0","padding-top":"0","padding-bottom":"0"},"body-offers":{"text-bottom-align":"center","text-bottom-color":"#959595","text-bottom-padding-bottom":"","text-bottom-padding-top":"","text-bottom-shadow":"transparent","text-bottom-size":"13","text-bottom-weight":"normal","text-top-align":"left","text-top-color":"#ffffff","text-top-padding-bottom":"13","text-top-padding-top":"15","text-top-shadow":"transparent","text-top-size":"16","text-top-weight":"normal"},"body-offers-list":{"align":"center","background":{"color":"#ffffff","horizontal":"left","image":"","size":"cover","vertical":"top"},"background-hover":{"color":"#4a91e2","horizontal":"left","image":"","size":"cover","vertical":"top"},"border-color":"#dbdbdb","border-radius":"0","border-width":"1","font-color":"#000000","font-color-hover":"#ffffff","font-size":"15","font-weight":"normal","margin-bottom":"5","margin-top":"0","padding-bottom":"6","padding-top":"9","text-align":"left","width":"97"},"header":{"background":{"color":"#ffffff","horizontal":"left","image":"","size":"cover","vertical":"top"},"border-color":"#ffffff","border-width":"1","border-box-shadow":"#d1d1d1","display":"none","font-align":"center","font-color":"#5f5f5f","font-size":"17","font-weight":"normal","padding-bottom":"18","padding-top":"21"},"footer":{"background":{"color":"#ffffff","horizontal":"left","image":"","size":"cover","vertical":"top"},"border-color":"#ffffff","border-width":"1","border-box-shadow":"#d1d1d1","display":"none","font-align":"center","font-color":"#5f5f5f","font-size":"10","font-weight":"normal","padding-bottom":"11","padding-top":"13"},"locker":{"border-radius":"4","box-shadow":"transparent","font":"Roboto","width":"300"},"page":{"background":{"color":"#171717","horizontal":"left","image":"","size":"cover","vertical":"top"},"opacity":"80"}},"phone":{"body":{},"body-human-verification":{"border-radius":"4","border-width":"0","font-size":"11","font-weight":"normal","margin-bottom":"0","margin-top":"0","padding-top":"0","padding-bottom":"0"},"body-offers":{"text-bottom-padding-bottom":"0","text-bottom-padding-top":"0","text-bottom-size":"10","text-bottom-weight":"normal","text-top-padding-bottom":"13","text-top-padding-top":"15","text-top-size":"15","text-top-weight":"normal"},"body-offers-list":{"border-width":"1","font-size":"14","font-weight":"normal","margin-bottom":"5","margin-top":"0","padding-bottom":"6","padding-top":"9","width":"98"},"header":{"border-width":"1","font-size":"13","font-weight":"normal","padding-bottom":"10","padding-top":"13"},"footer":{"border-width":"1","font-size":"9","font-weight":"normal","padding-bottom":"8","padding-top":"5"},"locker":{},"page":{}}},"css-custom":"body {\n    padding: 0 !important;\n    margin: 0 !important;\n}\n\n#my-locker {\n    background: transparent !important;\n    margin: \n}\n\nbody.mobile #my-locker {\n    max-width: none;\n}\n\nbody.mobile.editing #my-locker {\n    max-width: 330px;\n}\n\n#my-locker-body {\n    border-color: #d3d3d3 !important;\n}\n\n#my-locker-body {\n    padding: 0 !important;\n}\n\n#my-locker-body-offers {\n    background: #fff;\n    border: 1px solid #dbdbdb;\n    height: 391x;\n    left: 61px;\n    letter-spacing: normal;\n    padding: 0px;\n    position: fixed;\n    top: 15px;\n    width: 365px;\n    z-index: 6;\n}\n\nbody.mobile #my-locker-body-offers {\n    left: 50%;\n    margin: 0 auto;\n    position: fixed;\n    top: 10%;\n    transform: translateX(-50%);\n    width: 90%;\n    z-index: 8;\n}\n\nbody.editing.mobile #my-locker-body-offers {\n    background: #fff;\n    border: 1px solid #dbdbdb;\n    height: 391x;\n    left: 441px;\n    letter-spacing: normal;\n    padding: 0px;\n    position: fixed;\n    transform: none;\n    top: 61px;\n    width: 365px;\n    z-index: 6;\n}\n\nbody.editing #my-locker-body-offers {\n    left: 446px;\n    top: 15px;\n}\n\n#my-locker-body-offers .my-locker-body-text-top {\n    background: #4a90e2;\n    margin: 10px 10px 15px;\n    padding: 15px 15px 13px;\n}\n\n#my-locker-body-offers .my-locker-body-text-top strong {\n    font-weight: 700;\n}\n\n#my-locker-body-offers #verifying {\n    border-top: 1px solid #dbdbdb;\n    height: 40px;\n    margin-top: 15px;\n    padding: 10px;\n}\n\n#my-locker-body-offers #verifying #verify-container {\n    display: table;\n    height: inherit;\n}\n\n#my-locker-body-offers #verifying #verify-container > * {\n    display: table-cell;\n    vertical-align: middle;\n    width: 100%;\n}\n\n#my-locker-body-offers #verifying #options img {\n    cursor: pointer;\n    height: 20px;\n    margin-left: 2px;\n    margin-top: 6px;\n}\n\n#my-locker-body-offers #verifying #button {\n    width: 80px;\n}\n\n#my-locker-body-offers #verifying #button button {\n    background: #4a90e2;\n    border: 0;\n    border-radius: 3px;\n    color: #fff;\n    cursor: pointer;\n    font-weight: 700;\n    padding: 10px;\n    text-transform: uppercase;\n    width: 100%;\n}\n\n#my-locker-body-offers-list {\n    height: 233px;\n    margin: 10px;\n    padding: 0 !important;\n    overflow-x: hidden;\n    overflow-y: scroll;\n}\n\n#my-locker-body-offers-list a {\n    margin-left: 1px;\n}\n\n#my-locker-body-offers-list a > * {\n    margin-left: 12px !important;\n}\n\n#my-locker-body-offers-list a font {\n    color: #b1b1b1;\n    font-size: 12px;\n}\n\n#my-locker-body-offers-list a .rating img {\n    height: 14px;\n}\n\n#my-locker-body-offers-list a span {\n    padding: 0 !important;\n    max-width: 100% !important;\n}\n\n#my-locker-body-human-verification button {\n    display: none !important;\n}\n\n#ve-google-recaptcha-overlay {\n    background: #000000ba;\n    bottom: 0;\n    display: none;\n    left: 0;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 7;\n}\n\nbody.mobile.ve-google-recaptcha-open #ve-google-recaptcha-overlay {\n    display: block;\n}\n\nbody.editing.mobile.ve-google-recaptcha-open #ve-google-recaptcha-overlay {\n    display: none;\n}\n\n#ve-google-recaptcha {\n    border: 1px solid #DDD;\n    font-family: Roboto, sans-serif !important;\n    height: 72px;\n    letter-spacing: normal;\n    z-index: 5;\n\n    -moz-box-shadow: 0 0 4px 1px rgba(0,0,0,.08);\n    -webkit-box-shadow: 0 0 4px 1px rgba(0,0,0,.08);\n    box-shadow: 0 0 4px 1px rgba(0,0,0,.08);\n}\n\n#ve-google-recaptcha #container {\n    display: table;\n    height: inherit;\n    padding: 0 12px 0 15px;\n}\n\n#ve-google-recaptcha #container > * {\n    display: table-cell;\n    height: inherit;\n    vertical-align: middle;\n}\n\n#ve-google-recaptcha #validation {\n    text-align: left;\n    min-width: 38px;\n    width: 38px;\n}\n\n#ve-google-recaptcha #validation #square {\n    border: 2px solid #C2C2C2;\n    border-radius: 2px;\n    cursor: pointer;\n    height: 30px;\n    width: 30px;\n}\n\n#ve-google-recaptcha #validation #circle-acting {\n    background-image: url(https://i.imgur.com/FHLomy7.png);\n    display: none;\n    height: 38px !important;\n    width: 38px !important;\n\n\n\n-moz-animation:blue-circle-anim .8s steps(97)!important;-ms-animation:blue-circle-anim .8s steps(97)!important;-o-animation:blue-circle-anim .8s steps(97)!important;-webkit-animation:blue-circle-anim .8s steps(97)!important;animation:blue-circle-anim .8s steps(97)!important\n}\n\n#ve-google-recaptcha #validation #circle-loading {\n    background-image: url('https://i.imgur.com/cOBJ3AL.png');\n    display: none;\n    height: 36px !important; \n    width: 36px !important;\n\n\n-moz-animation:blue-circle-loading-anim 1.7s steps(79) infinite!important;-ms-animation:blue-circle-loading-anim 1.7s steps(79) infinite!important;-o-animation:blue-circle-loading-anim 1.7s steps(79) infinite!important;-webkit-animation:blue-circle-loading-anim 1.7s steps(79) infinite!important;animation:blue-circle-loading-anim 1.7s steps(79) infinite!important\n}\n\n#ve-google-recaptcha #not-a-robot {\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: 400;\n    padding-left: 10px;\n    width: 100%;\n}\n\n#ve-google-recaptcha #logo {\n    text-align: center;\n    width: 60px;\n    white-space: nowrap;\n}\n\n#ve-google-recaptcha #logo img {\n    height: 30px;\n    width: 30px;\n}\n\n#ve-google-recaptcha #logo #details center {\n    color: #9b9b9b;\n    font-size: 10px;\n    font-weight: 400;\n    line-height: 10px;\n    margin-bottom: -4px;\n    text-align: center;\n    text-transform: uppercase;\n}\n\n#ve-google-recaptcha #logo #details #links {\n    line-height: 1;\n    margin-bottom: -4px;\n}\n\n#ve-google-recaptcha #logo #details #links a {\n    color: #9b9b9b;\n    font-size: 8px;\n    font-weight: 400;\n    text-decoration: none;\n}\n\n#ve-google-recaptcha #logo #details #links a#privacy::after {\n    color: #9b9b9b;\n    content: \"-\";\n    font-size: 8px;\n    margin: 0 2px;\n}\n\n::-webkit-scrollbar {\n    width: 12px;\n    height: 12px;\n}\n\n::-webkit-scrollbar-thumb {\n    background-color: #C1C1C1;\n}\n\n::-webkit-scrollbar-track {\n    background-color: #F1F1F1;\n    border: solid 1px #F1F1F1;\n    -webkit-border-radius: 2px;\n    border-radius: 1px;\n}\n\n@-moz-keyframes blue-circle-loading-anim{0%{background-position-y:0!important}100%{background-position-y:-2844px!important}}@-ms-keyframes blue-circle-loading-anim{0%{background-position-y:0!important}100%{background-position-y:-2844px!important}}@-webkit-keyframes blue-circle-loading-anim{0%{background-position-y:0!important}100%{background-position-y:-2844px!important}}@keyframes blue-circle-loading-anim{0%{background-position-y:0!important}100%{background-position-y:-2844px!important}}\n\n\n@-moz-keyframes blue-circle-anim{0%{background-position-y:0!important}100%{background-position-y:-3686px!important}}@-ms-keyframes blue-circle-anim{0%{background-position-y:0!important}100%{background-position-y:-3686px!important}}@-webkit-keyframes blue-circle-anim{0%{background-position-y:0!important}100%{background-position-y:-3686px!important}}@keyframes blue-circle-anim{0%{background-position-y:0!important}100%{background-position-y:-3686px!important}}\n","google":{"analytics-tracking-id":"","event-tracking":"disabled","translate":"disabled"},"javascript-custom":"/* EDIT THESE VARIABLES */\n\nvar centerHorizontally = true;\nvar centerVertically = true;\n\n/* DON'T EDIT BELOW HERE */\n\n(function($) {    \n  if ($.fn.style) {\n    return;\n  }\n\n  // Escape regex chars with \\\n  var escape = function(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n  };\n\n  // For those who need them (< IE 9), add support for CSS functions\n  var isStyleFuncSupported = !!CSSStyleDeclaration.prototype.getPropertyValue;\n  if (!isStyleFuncSupported) {\n    CSSStyleDeclaration.prototype.getPropertyValue = function(a) {\n      return this.getAttribute(a);\n    };\n    CSSStyleDeclaration.prototype.setProperty = function(styleName, value, priority) {\n      this.setAttribute(styleName, value);\n      var priority = typeof priority != 'undefined' ? priority : '';\n      if (priority != '') {\n        // Add priority manually\n        var rule = new RegExp(escape(styleName) + '\\\\s*:\\\\s*' + escape(value) +\n            '(\\\\s*;)?', 'gmi');\n        this.cssText =\n            this.cssText.replace(rule, styleName + ': ' + value + ' !' + priority + ';');\n      }\n    };\n    CSSStyleDeclaration.prototype.removeProperty = function(a) {\n      return this.removeAttribute(a);\n    };\n    CSSStyleDeclaration.prototype.getPropertyPriority = function(styleName) {\n      var rule = new RegExp(escape(styleName) + '\\\\s*:\\\\s*[^\\\\s]*\\\\s*!important(\\\\s*;)?',\n          'gmi');\n      return rule.test(this.cssText) ? 'important' : '';\n    }\n  }\n\n  // The style function\n  $.fn.style = function(styleName, value, priority) {\n    // DOM node\n    var node = this.get(0);\n    // Ensure we have a DOM node\n    if (typeof node == 'undefined') {\n      return this;\n    }\n    // CSSStyleDeclaration\n    var style = this.get(0).style;\n    // Getter/Setter\n    if (typeof styleName != 'undefined') {\n      if (typeof value != 'undefined') {\n        // Set style property\n        priority = typeof priority != 'undefined' ? priority : '';\n        style.setProperty(styleName, value, priority);\n        return this;\n      } else {\n        // Get style property\n        return style.getPropertyValue(styleName);\n      }\n    } else {\n      // Get CSSStyleDeclaration\n      return style;\n    }\n  };\n})(jQuery);\n\nvar moveOfferList = function() {\n    var width = $(window).width();\n    var height = $(window).height();\n\n    // If it's not for Mobile.\n    var isForMobile = (!$('body').hasClass('mobile') || $('body').hasClass('editing') ? false : true);\n\n    if (centerVertically == true) {\n        $('#my-locker').style('margin-top', '0px', 'important');\n        $('#ve-google-recaptcha').style('margin-top', ((height/2)-36)+'px', 'important');\n        $('#my-locker-body-offers').css('margin-top', ((height/2)-191)+'px').css('top', 0);\n    }\n    else {\n        $('#my-locker').style('margin-top', (isForMobile === false ? '20px' : '2%'), 'important');\n        $('#ve-google-recaptcha').style('margin-top', '0', 'important');\n        $('#my-locker-body-offers').css('margin-top', 0).css('top', '38px');\n    }\n\n    // If we're centering everything horizontally.\n    if (centerHorizontally === true) {\n        // Determine what positions we'll change to.\n        var lockerMarginLeft = (isForMobile === false ? ((width/2)-165)+'px' : 'auto');\n        var lockerOffersLeft = (isForMobile === false ? ((width/2)-(centerVertically == false ? 102 : 183))+'px' : '50%');\n\n        $('#my-locker').style('margin-left', lockerMarginLeft, 'important');\n        $('#my-locker-body-offers').css('left', lockerOffersLeft);\n    }\n    else {\n        $('#my-locker').style('margin-left', (editing === true ? '360px' : (isForMobile === false ? '20px' : 'auto')), 'important').css('left', 0);\n        $('#my-locker-body-offers').css('left', (editing === true ? '421px' : (isForMobile === false ? '82px' : '50%')));\n    }\n};\n\n$(document).ready(function() {\n    $('#ve-google-recaptcha').remove();\n    $('#my-locker-body-offers #verifying').remove();\n    $('#ve-google-recaptcha-overlay').remove();\n\n    $('#my-locker-body-human-verification')\n        .append('<div id=\"ve-google-recaptcha\">' +\n                    '<div id=\"container\">' +\n                        '<div id=\"validation\">' +\n                            '<div id=\"square\"></div>' +\n                            '<div id=\"circle-acting\"></div>' +\n                            '<div id=\"circle-loading\"></div>' +\n                        '</div>' +\n                        '<div id=\"not-a-robot\">I\\'m not a robot</div>' +\n                        '<div id=\"logo\">' +\n                            '<img src=\"https://i.imgur.com/HqnV16O.png\" />' +\n                            '<div id=\"details\">' +\n                                '<center>Captcha</center>' +\n                                '<div id=\"links\">' +\n                                    '<a href=\"https://www.google.com/intl/en/policies/privacy/\" target=\"_blank\" id=\"privacy\">Privacy</a>' +\n                                    '<a href=\"https://www.google.com/intl/en/policies/terms/\" target=\"_blank\">Terms</a>' +\n                                '</div>' +\n                            '</div>' +\n                        '</div>' +\n                    '</div>' +\n                '</div>');\n\n    $('#my-locker-body-offers')\n        .append('<div id=\"verifying\">' +\n                    '<div id=\"verify-container\">' +  \n                        '<div id=\"options\">' +\n                            '<img src=\"https://i.imgur.com/eUq0zmO.png\" />' +\n                        '</div>' +\n                        '<div id=\"button\">' +\n                            '<button>Verify</button>' +\n                        '</div>' +\n                    '</div>' +\n                '</div>');\n\n    var $recaptcha = $('#ve-google-recaptcha');\n\n    $('#square', $recaptcha).on('click', function() {\n        if (!$(this).is(':visible')) {\n            return;\n        }\n\n        $(this).hide();\n        $('#circle-acting', $recaptcha).show();\n\n        var motioBC = new Motio($('#circle-acting', $recaptcha)[0], {\n\t    fps: 60,\n\t    frames: 97,\n\t    vertical: true\n\t});\n\n\tmotioBC.play();\n\n        setTimeout(function() {\n            $('#circle-acting', $recaptcha).hide();\n            $('#circle-loading', $recaptcha).show();\n            motioBC.destroy();\n\n            var motioBCL = new Motio($('#circle-loading')[0], {\t\t\t\t\t\t\t\t\n                fps: 60,\t\t\t\t\t\t\t\n                frames: 79,\t\t\t\t\t\t\t\n                vertical: true\t\t\t\t\t\t\t\n            });\n\t\t\t\t\t\t\t\n            motioBCL.play();\n\n            $('#my-locker-body-offers').show();\n            $('body').addClass('ve-google-recaptcha-open');\n        }, 2500);\n    });\n\n    var index = 0;\n\n    $('#my-locker-body-offers-list a').each(function() {\n        var offer = useOffers[index];\n        \n        if (offer && typeof offer !== 'undefined' && typeof offer === 'object') {\n            $('font', this).remove();\n            $('.rating', this).remove();\n    \n            // What text do we display?\n            var conversionText = ('conversion' in offer ? offer.conversion : '- Unknown -');\n    \n            $(this)\n                .append('<font>'+conversionText+'</font>' +\n                    '<div class=\"rating\">' +\n                        '<img src=\"https://i.imgur.com/wrrR1cu.png\" />' +\n                    '</div>');\n        }\n\n        // Increase the index.\n        index++;\n    });\n\n    $('#my-locker-body-offers-list').attr('align', 'left');\n \n    // Once motio is ready.\n    var motioIsReady = function() {\n        initMotio();\n    };\n\n    if ($('script#motio').length == 0) {\n      \n$.getScript('https://bucket.cpabuild.com/uploads/assets/1514479459f53def1f1ed3bfc344f35f9587cce8ed.js', function() {\n            motioIsReady();\n        });\n    }\n    else {\n        motioIsReady();\n    }\n\n    $('#my-locker').append('<div id=\"ve-google-recaptcha-overlay\"></div>');\n\n    $('#options').on('click', function() {\n        alert('Disabled due to high server load. Please try again later.');\n    });\n\n    $('#not-a-robot').on('click', function() {\n        $('#square').trigger('click');\n    });\n\n    moveOfferList();\n});\n\n$(window).resize(function() {\n    moveOfferList();\n});","offers":{"display":"5","min-offers":"2","min-payout":"3","on-complete":"close","redirect-url":"http://cpabuild.com/public/redirect.php?lead_id=%lead_id%","show-tooltips":"disabled"},"other":{"alert-before-leaving":"disabled","disable-right-click":"enabled","esc-key-close":"disabled","human-verification":"enabled"},"text":{"header":"Complete an Offer to prove you aren't a Bot","human-verification":"Verify Through Survey","body-top":"Choose 1 <strong>offer</strong> or install 1 <strong>app</strong> below.","body-bottom":"","footer":"It takes 2-3 minutes for the prize to unlock in your Country."}}
